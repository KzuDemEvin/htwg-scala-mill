package de.htwg.se.mill.controller.controllerBaseImpl

import com.google.inject.name.Names
import com.google.inject.{Guice, Inject, Injector}
import de.htwg.se.mill.RoundManagerModule
import de.htwg.se.mill.model.fieldComponent.FieldInterface
import de.htwg.se.mill.model.roundManagerComponent.RoundManager
import net.codingwell.scalaguice.InjectorExtensions.ScalaInjector

class RoundManagerController @Inject()(var field: FieldInterface) extends RoundManagerControllerInterface {
  var mgr: RoundManager = RoundManager(field)
  val injector: Injector = Guice.createInjector(new RoundManagerModule)

  def createEmptyField(size: Int): Unit = {
    mgr = mgr.copy(winner = 0, roundCounter = 0, field = injector.instance[FieldInterface](Names.named("normal"))).modeChoice()
  }

  def createRandomField(size: Int): Unit = {
    mgr = mgr.copy(winner = 0, roundCounter = mgr.borderToMoveMode, field = injector.instance[FieldInterface](Names.named("random"))).modeChoice()
  }

  def handleClick(row: Int, col: Int): Unit = {
    mgr = mgr.handleClick(row, col)
  }
}